version: '2'
services:

###########################
### CORE SERVICES START ###
###########################

  # Consul is our service registry. (https://github.com/hashicorp/consul)
  # Consul is configured to be exposed locally (http://${HOST_DOMAIN}:8500) to make it easier to change and manage configurations.
  consul:
    image: mobileapps.vaftl.us:9250/ckm/consul-server:latest
    command: "consul agent -server -bootstrap-expect=1 -ui -client 0.0.0.0 -data-dir /consul/data -config-dir /consul/config"
    #    volumes:
    # - "/consul/data"
    # - "/consul/config"
    ports:
     - "8500:8500"
     - "8600:8600/udp"

  # Registrator is a special container that monitors and registers other containers in Consul.
  # https://github.com/gliderlabs/registrator
  #
  # Registrator should use the special hostlocal.io (169.254.255.254) to communicate with services on the same development system.
  # 169.254.X.X is a special IP that allows services on the same docker host (i.e. local network) to easily communicate through
  # the host network- remember `${HOST_DOMAIN}`is connections *inside* each container, hostlocal is for communicating
  # *between* containers on the same host.
  # (see https://en.wikipedia.org/wiki/Link-local_address)
  #
  # Tags flag in command is used to ensure that all services are registered to correct environment
  # (see https://github.com/gliderlabs/registrator/blob/master/registrator.go#L27)
  registrator:
    image: mobileapps.vaftl.us:9250/ckm/registrator:1.1.1
    command: "-tags local -internal consul://consul:8500"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    environment:
      - CONSUL_HTTP_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
    links:
      - consul

  # The API Gateway. Nginx with a few "enhancements":
  #
  # * Openresty: Framework that enables building Nginx plugins with Lua
  # * Consul-Template: Rewrites _nginx.conf_ based on Consul configurations
  #
  apigateway:
    image: mobileapps.vaftl.us:9250/ckm/apigateway:1.3.3
    ports:
      - "8089:80"
    links:
      - registrator
      - consul
      - user-services
      - roa-services
      - zipkin
    environment:
      # Local consul instance. Point to central Consul server for non-development deployments
      - CONSUL_HTTP_ADDR=consul:8500
      - VAMF_ENVIRONMENT=local # The API Gateway will only map services tagged with same environment
      - USERSVC_URL=http://user-services:8080/users/v1/session/jwt
      - JWT_SECRET=testtesttest
      - SERVICE_80_NAME=apigateway
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - "AUTH_RULES_SVC_URL=http://authorization-rules-service:8080/rules/v1"
      - "REGEX_AUTH_PROXY=.*"
      - "REGEX_RESTRICTED_HEADER=((^va_)|(^eauth_))/i"
      - "REGEX_EXCLUDE_JWT_URL=((js$$)|(css$$)|(gif$$)|(jpg$$)|(^/users)|(^/saml)|(^/eula))"
      - "TRACE_URL=http://zipkin:9411/api/v1/spans"

  # User service and Mobile Veteran (Patient) Index (MVI/MPI)- The user service is responsible for processing requests
  # to create JWT security tokens and augmenting user identities with other identifiers from the MVI (specifically ICN)
  #
  mock-mvi:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/var-mock-mvi:1.1-user-services-1.8.0-0822-dfn-100862-mockuser15-hack
    ports:
      - "35219:8080"
    environment:
      - SERVICE_TAGS=local
      - SERVICE_NAME=mock-mvi

#  mock-mvi:
#    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vamf/mvimock-soapui:v1.0.5
#    ports:
#      - "35220:8080"

  user-services:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/docker-user-service:1.8.3
    depends_on:
      - eula-web
      - eula-service
      - mock-mvi
    links:
      - mock-mvi
      - roa-services
      - sud-service
      - zipkin
      - redis
      - mock-wstrust
      - eula-service
    expose:
      - "8080"
    ports:
      - "8081:8080"
      - "18081:5005"
    environment:
      # 1.7.0 configuration
      #- VAULT_ADDR=http://vault:8200
      #- SECRET_PATH=secret/local/user-services
      - USE_ENVCONSUL=false
      - SERVER_USE_FORWARD_HEADERS=true
      - TRACE_URL=http://zipkin:9411/api/v1/spans
      - MVI_URL=http://mock-mvi:8080/mvi/mockVAIdMPort
      - ROA_HOST=http://roa-services:8080
      - SUD_HOST=http://sud-service:8080
      - MVI_SENDER_ID=CIH200
      - MVI_PROCESSING_CODE=T
#      - MVI_PROCESSING_CODE=MVI_PROCESSING_CODE
      - JWT_SECRET=testtesttest
      - SERVICE_TAGS=local
      - VAMF_ENVIRONMENT=local
      - SERVICE_8080_NAME=docker-user-service
      - CONSUL_SERVER=consul:8500
      - CONSUL_HTTP_ADDR=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=vamf/local/user-services/v1
      - APIGW_BASE_URL=http://localhost:8089
      - EULA_HOST=http://eula-service:8080
      - WAYF_APP_URL=http://localhost:8089/wayf/v1/index.html
      - "AUTH_RULES_SVC_URL=http://authorization-rules-service:8080/rules/v1"
      - "AUTH_RULES_HOST=http://authorization-rules-service:8080/"
      - "MVI_VISTA_FACILITIES=101,111,222,313,372,376,442,500,516,553,631,688,777,523,636"
      - "JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication -agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n"
      - "REDIS_HOST=redis"
      - ENABLE_ZIPKIN=false
      - "IAM_WST_URL=http://mock-wstrust:8080/services/sts"
      - "DEV_CACHE_ENC_DISABLED=true"
      - "CACHE_ENC_PWD=password1!"
      # Include JWT_SECRET or JWT_PRIVATE_KEY + JWT_PUBLIC_KEY
      #- JWT_PRIVATE_KEY=MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDBGzt361EC4riygMie4qnnWVNNNdY3yiRdHf+BIeIgH6ru9l4AZYDxQuMJi4QIt17y1Lo7HNnBKP+gzSRkFe4cpira6RYqNMSY7CWlBbi8GlfrRtzHmtfCgSNtxaCEr2hVbBjg7BsAnhNiSWRQdkLlu5D7xFTn27oUhZK/Y3cP1UGR9iwe+nc7hpdVoTx1nR3GV1R2/9Z4+guQJ5RiAuwbIOD/Oxm8OtfX7K82yM02YH+SwlKim0y/0J/JSlJex+i/7waEEK2DMO+CffaTDv3A+ytOSCcLQNG26/7LeoJdf5knpxsnfW1W6z0Bp1SfYKtYm6vr8pFiyeJBoSd8DjeHAgMBAAECggEATcnKiuQgHil2fXGjX12vU6KIC/JD+PVU8K3E3x/nF0mqcdiMxVweNRHco1uwNFKpzOgknOtiTI1XbE82+Zpb8O5/FPAQHbBkAbYe8/r6D8wM3poNFdsqTw/2VaHmp4yBWufQncp+liEXbeBiqIb7K9AC92h/S2cX7mxgUPigXZ+2V5Bvdjo2jAtdrq6nXFtzsqCxNKFpFifdV2TkFbq6vGB/mJdrFHspUiMZc2KAR7/pQCO/oR/WIyHRTBvWcM/zrd/7A6TZRKYMabYDn1dbyP/ATqyJ/rtx+7Josj+LogBVrdeD7USpdHj6FLbT/Z0N5o1tintUlj8eo1XqNupjAQKBgQD2VLTgiVphbju0YA65I1yWYuPYdDXJVkJjqv7lFndPdOGZsfysdc2fdkdAEkPVZhI5Tve8CvOW98WnVLkj/WRyfBVeVbekIGdsH/PWRTrLv5mXbpDGYP0z1c7FTMx6qiaE6ZLZATy4jWBLRPQcJj5rm70nO4Sajfo5TQW4BB+abQKBgQDIr7Dvq5AixiMSzbvhPIDqjIYQv+TCbzKoNm/JuRgE/1mxfgxuthNA8OLDBEmCa3SWUo9Slrq5KnynVMnxIMiTw9CSbLhUYxqlrP0ei6C7d1bv5N3tH4GD5ljCmobz04Dg56/bs/pbfJBjfE2qxtrEgzK51FazUzlFUwzf++vhQwKBgQCCUuRzWxfvLjP2RU/k0XmdsuoazbjbMYDkXEaJC27KIetttkYZNCY6tIgTtNYgo+UGXuogmaawe5wd4GwnR1uKWm2vwCftdJtjEDCgb3Yg79ihzoRYAF5Vu0uvBOe2Cilg7nabytTGSz3j9LI15mHl6rqTdCC+6Fi3UjGxXrUdrQKBgQCjPF0EJZ2A239N3TA0Hd2Saqjl2OA+0un2bwjwoPCLqBQRzkBYkRsKGKWqEMOmJLdZSmAvwlCxKoDoLoxv6MWdg4oUgABTC6VyG0pr3RDpS0HYsWVeaeEUI3oRGFYq39+VkH63iyZZ4fEkKsiV31e0vi61fqTjCg+sdsgjLCuKNwKBgQDhp8wfpcqYnvDvn7OKL52SiXfktTWe8xq6pVKLDrHScEUhj/vgcXkvOiELP+jnNivMU2AWObLq0Nf+JWpH4HrIH8R+Ag7sgy+mL53Ku+4I2et1JsHCc94AS59qY/C4AqZDgpFAFYKTNPRn+bQMAIRCh2dIayehKTgZpvhmxxSSvw==
      #- JWT_PUBLIC_KEY=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwRs7d+tRAuK4soDInuKp51lTTTXWN8okXR3/gSHiIB+q7vZeAGWA8ULjCYuECLde8tS6OxzZwSj/oM0kZBXuHKYq2ukWKjTEmOwlpQW4vBpX60bcx5rXwoEjbcWghK9oVWwY4OwbAJ4TYklkUHZC5buQ+8RU59u6FIWSv2N3D9VBkfYsHvp3O4aXVaE8dZ0dxldUdv/WePoLkCeUYgLsGyDg/zsZvDrX1+yvNsjNNmB/ksJSoptMv9CfyUpSXsfov+8GhBCtgzDvgn32kw79wPsrTkgnC0DRtuv+y3qCXX+ZJ6cbJ31tVus9AadUn2CrWJur6/KRYsniQaEnfA43hwIDAQAB
      - "JWTISSUER_CONFIG_JSON=[{\"rsaPublicKeyB64\":\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtxwSTqAC49xXxWIX/kpb4EWXjnpN8ii5FbjAOmubKA32ZVHC+OSj14uRkKJp5EgU0aOO6cbm7jTnGjOFq+KC540qtBMP6/bd/rcXNCb7t8ajb2eWC1PdvYCrpXM/IAZvdrOGhc9sU+8DeZj2dJg+WIlWkrnXsHMbAd5ePt1mCx6NPADFBRVSJg9MAN04yzBAcgmAeOgcZGYqHcihov3hIi0UnAwi0wtBHIquGcRKhUAG5clOY3YxyNJZ2HWglrCHtz1sHe7OGFBfGGR18C+S6CK7GDB2zm3IkJ16uqf/F3s+tF7u88mE3t6gr/Y/1U6OH99xm1Ta0Yqzie351qEXSwIDAQAB\",\"iss\":\"gov.va.mhv.idp.v1\",\"userType\":\"VETERAN\"},{\"rsaPublicKeyB64\":\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtxwSTqAC49xXxWIX/kpb4EWXjnpN8ii5FbjAOmubKA32ZVHC+OSj14uRkKJp5EgU0aOO6cbm7jTnGjOFq+KC540qtBMP6/bd/rcXNCb7t8ajb2eWC1PdvYCrpXM/IAZvdrOGhc9sU+8DeZj2dJg+WIlWkrnXsHMbAd5ePt1mCx6NPADFBRVSJg9MAN04yzBAcgmAeOgcZGYqHcihov3hIi0UnAwi0wtBHIquGcRKhUAG5clOY3YxyNJZ2HWglrCHtz1sHe7OGFBfGGR18C+S6CK7GDB2zm3IkJ16uqf/F3s+tF7u88mE3t6gr/Y/1U6OH99xm1Ta0Yqzie351qEXSwIDAQAB\",\"iss\":\"external.idp.test1\",\"userType\":\"VETERAN\"},{\"rsaPublicKeyB64\":\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA17igsXGfpg3BRv1dr9jAyhyjGUpDSQ1CCIjQI/NZD+OoxoTlvPMmY8yQ3OfisnpE7zR+dNAdj7CHCiCbKgQKjPmOzdobKJD7N8538lxZ2wlHNko0rG3iyCKJVRJFMXirZfrPERlFj0AQrwhobIpuwyFQfsNTZPaxeaN35Bexo7fowu0LBkzvCioZfKq6QPxx8qQ0/wJYxeh3D4b5NWR1eIbWpJE5NbWYx0ZSs/TD5HQTAGsIvJN5+EKzVB1RZAp0UwdxDQE7BjpXBXx0PjZidCY2kH2jVm1OHd/xzkZiIt2EYe5Cpd/CuLfWjzxHv6pCkC8I0a6qljQNS9iOQc6blwIDAQAB\",\"iss\":\"gov.va.vamf.service.saml-sts\",\"userType\":\"VETERAN\"}]"
      - "IDP_CONFIG_JSON=[{\"idpId\": \"gov.va.iam.ssoe.v1\",\"friendlyName\": \"VAAFI SSOe\",\"description\": \"Veteran login supporting DSLogon, Symantec, and other CSPs.\",\"versionId\": \"v1\",\"scope\": \"VETERAN\",\"logoUrl\": \"img/dslogon-logo.png\",\"loginUrl\": \"http://${HOST_DOMAIN}:9000/users/v1/landing\",\"logoutUrl\": \"http://${HOST_DOMAIN}:9000/ssoeproxy/logout\",\"landingPage\": \"http://${HOST_DOMAIN}/users/v1/landing\"},{\"idpId\": \"gov.va.iam.ssoi.v1\",\"friendlyName\": \"VAAFI SSOi\",\"description\": \"Staff login supporting PIV authentication.\",\"versionId\": \"v1\",\"scope\": \"STAFF\",\"logoUrl\": \"img/logo_navbar_ipad.png\",\"loginUrl\": \"http://localhost:9001/users/v1/landing\",\"logoutUrl\": \"http://${HOST_DOMAIN}:9001/ssoiproxy/logout\",\"landingPage\": \"http://${HOST_DOMAIN}/users/v1/landing\"},{\"idpId\": \"gov.va.mhv.v1\",\"friendlyName\": \"My HealtheVet\",\"description\": \"Staff login supporting PIV authentication.\",\"versionId\": \"v1\",\"scope\": \"VETERAN\",\"logoUrl\": \"img/mhv-logo.png\",\"loginUrl\": \"http://${HOST_DOMAIN}:8080/ssoiproxy/login\",\"logoutUrl\": \"http://${HOST_DOMAIN}:8080/ssoiproxy/logout\",\"landingPage\": \"http://${HOST_DOMAIN}:8080/users/v1/landing\"}]"


  authorization-rules-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vamf-authorization-rules-service:1.0.3
    container_name: authorization-rules-service
    ports:
      - "8481:8080"
      - "18481:5005"
    environment:
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
      - USE_ENVCONSUL=true
      - SERVER_USE_FORWARD_HEADERS=true
      - SERVICE_TAGS=local
      - SERVICE_NAME=authorization-rules-service
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - "VAMF_ENVIRONMENT=local"
      - "CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/authorization-rules-service/v1"
      - JWT_SECRET=testtesttest
      - "CONSUL_HTTP_ADDR=${CONSUL_SERVER}"
      - "ADMIN_TOKENS_ENABLED=true"
      - "ADMIN_TOKENS=admin|d4b75643-40a9-4694-897d-c099f741c8b2"
      - "ENABLE_ZIPKIN=false"
#     - "RULES_FOLDER=/opt/rules"
#      - "AUTH_RULES_SVC_URL="
#   volumes:
#     - "./authorization-rules-service/rules:/opt/rules"

  # End User License Agreement (EULA) Service v1
  eula-web:
    image: mobileapps.vaftl.us:9250/ckm/eula-web:1.0.4
    ports:
      - 8101:80
    environment:
      - SERVICE_NAME=eula-web
      - SERVICE_TAGS=local

  eula-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/eula-service:1.1.4
    expose:
      - "8080"
    ports:
      - "8098:8080"
    environment:
      - VAMF_ENVIRONMENT=local
      # No Secrets don't Use Vault
      #- VAULT_ADDR=http://vault:8200
      #- SECRET_PATH=secret/local/eula
      # Use consul
      - USE_ENVCONSUL=false
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=appconfig/local/eula
      - ORACLE_URL=jdbc:oracle:thin:@//mock-roa:1521/xe
      # - ORACLE_URL=jdbc:oracle:thin:@//eula-mock-db:1521/xe
      - ORACLE_USERNAME=HADB
      - ORACLE_PASSWORD=m0ckpass01
      - EULA_LATEST_VERSION=1
      - JWT_SECRET=testtesttest
      - ENABLE_ZIPKIN=false
      - SERVICE_TAGS=local
      - SERVICE_NAME=eula-service

  ## Swagger UI for working with contracts
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
     - "8091:8080"

  # Where Are You From? (WAYF) web App. WAYF is a CSS/HTML/JS client-side web application.
  wayf-web:
    image: mobileapps.vaftl.us:9250/ckm/wayf-app:1.0.3
    ports:
    - 8092:80
    environment:
    - SERVICE_TAGS=local
    - SERVICE_80_NAME=wayf-web

  # redis for container state
  redis:
    image: mobileapps.vaftl.us:9250/ckm/vamf-redis:1.0.0

# Third party as is mocks
  zipkin:
    image: mobileapps.vaftl.us:9250/ckm/k8-pod-infra-containers/zipkin
    ports:
      - "9411:9411"

#########################
### CORE SERVICES END ###
#########################

#########################
### DB FIXTURES START ###
#########################

  mock-roa:
    image: mobileapps.vaftl.us:9250/ckm/docker-roa-mock:1.0.3
    ports:
    - "1521"

  # eula-mock-db:
  #   image: mobileapps.vaftl.us:9250/ckm/docker-roa-mock:1.0.3
  #   ports:
  #   - "1521"

  var-mongo-db-mock:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/var-mongo-db-mock:1.0.0
    #image: dev/var-mongo-db-mock
    ports:
      - "27017:27017"
    environment:
      - constraint:nodetype==*service*
      - SERVICE_NAME=var-mongo-db-mock
      - SERVICE_TAGS=local
      - JWT_SECRET=testtesttest
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=${CONSUL_MASTER_TOKEN}
      - CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/var-mongo-db-mock

  var-oracle-db-mock:
    image: sath89/oracle-xe-11g:latest
    ports:
      - "1521:1521"
    volumes:
      - ./var-oracle-db-mock:/docker-entrypoint-initdb.d
    environment:
      - constraint:nodetype==*service*
      - SERVICE_NAME=var-oracle-db-mock
      - SERVICE_TAGS=local
      - JWT_SECRET=testtesttest
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=${CONSUL_MASTER_TOKEN}
      - CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/var-oracle-db-mock

  video-visits-mongo-mock:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/video-visits-mongo-mock:1.1.1-VAR-12798-dedf49402b3f
    ports:
      - "27015:27017"
    environment:
      - constraint:nodetype==*service*
      - SERVICE_NAME=video-visits-mongo-mock
      - SERVICE_TAGS=local
      - JWT_SECRET=testtesttest
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=${CONSUL_MASTER_TOKEN}
      - CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/video-visits-mongo-mock

  vvs-mongo-mock:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vamf/appointment-service-vvs-mongo-mock:1.0.0
    ports:
      - "27014:27017"
    environment:
      - SERVICE_NAME=vvs-mongo-mock
      - SERVICE_TAGS=local


#  video-visits-oracle-mock:
#    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/video-visits-oracle-mock:latest
#    expose:
#      - "1521"
#    ports:
#      - "2521:1521"
#    mem_limit: 3GB
#    environment:
#      - "constraint:nodetype==*service*"
#      - "SERVICE_NAME=video-visits-oracle-mock"
#      - "SERVICE_TAGS=local"
#      - "CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF"
#      - "CONSUL_HTTP_ADDR=${CONSUL_SERVER}"
#      - "CONSUL_PATH=appconfig/local/video-visits-oracle-mock"
#
#  video-visits-rabbitmq:
#    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/video-visits-rabbitmq:1.0.1
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    environment:
#      - SERVICE_NAME=video-visits-rabbitmq

# fixtures used for upcoming shared services
# Mongo mock for quartz and notifications, username/pass authentication turned on by default
# SSL turned off by default
  mongo:
    image: mobileapps.vaftl.us:9250/ckm/mock-mongo:1.0.0
    expose:
     - "27017"
    ports:
     - "27017"
    environment:
    - MONGODB_ADMIN_USER=admin
    - MONGODB_ADMIN_PASS=adminpass
    - MONGODB_APPLICATION_DATABASE=notificationsdb, remindersdb, taskresourcesdb
    - MONGODB_APPLICATION_USER=testuser
    - MONGODB_APPLICATION_PASS=testpass
    - SSL_ENABLED=false
    - AUTH_ENABLED=true
    - JOURNALING=true

  via-weblogic:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vamf/via-weblogic:4.0.25
    tty: true
    ports:
      - "7011:7011"
      - "8000:8000"
    environment:
      - USE_MOCK_RESULTS=true
      - MOCK_RESULTS_URL=http://via-mock-engine:8080/mock/results/
      - SIMULATE_SSOI=true
      - SIMULATED_SSOI_ACCESS_CODE=FakeDoc1
      - SIMULATED_SSOI_VERIFY_CODE=FD3456!!
    depends_on:
      - via-oracle
      - via-vista
      - via-mock-engine

  via-oracle:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vamf/via-oracle:4.0.25
    ports:
      - "1522:1521"

  via-vista:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vamf/via-vista:4.0.25
    ports:
      - "8001:8001"
      - "2222:22"
      - "9430:9430"

  via-mock-engine:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vamf/via-mock-engine:4.0.25
    ports:
      - "8082:8080"
      - "5005:5005"
    volumes:
      - ./via-mock-files/SchedulingService:/opt/via-mock-files

#######################
### DB FIXTURES END ###
#######################

#######################
### DATA SEED START ###
#######################
  var-mongo-data-seed:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/var-mongo-data-seed:1.0.0
#    image: dev/var-mongo-data-seed
    volumes:
      - ./var-mongo-db-mock/data:/docker-entrypoint-initdb.d/
    depends_on:
      - var-mongo-db-mock

#####################
### DATA SEED END ###
#####################

#############################
### SHARED SERVICES START ###
#############################
  var-messaging-microservice:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/var-messaging-microservice:0.47
    #image: dev/var-messaging-microservice
    expose:
      - "8080"
    environment:
      - SERVICE_TAGS=local
      - SERVICE_NAME=var-messaging-microservice
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=appconfig/local/var-messaging-microservice

  facility-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/facility-resources:0.29
    #image: dev/facility-service
    expose:
      - "8080"
    environment:
      - SERVICE_TAGS=local
      - SERVICE_NAME=facility-service
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=appconfig/local/facility-resources

  vmr-mock-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/vmr-mock-service:latest
    ports:
     - "8284:8080"
    environment:
     - constraint:nodetype==*service*
     - SERVICE_NAME=vmr-mock-service
     - SERVICE_TAGS=${VAMF_ENVIRONMENT}
     - JWT_SECRET=testtesttest
     - CONSUL_SERVER=consul:8500
     - CONSUL_TOKEN=${CONSUL_MASTER_TOKEN}
     - CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/vmr-mock-service

  video-visits-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/video-visits-service:2.4.3
    ports:
      - "8079:8080"
    links:
      - vmr-mock-service
      - video-visits-mongo-mock
    depends_on:
      - vmr-mock-service
      - video-visits-mongo-mock
    environment:
      - constraint:nodetype==*service*
      - SERVICE_NAME=video-visits-service
      - SERVICE_TAGS=local
      - VAMF_ENVIRONMENT=local
      - JWT_SECRET=testtesttest
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=appconfig/local/video-visits-service
      - "TRACE_URL=http://localhost:9411/api/v1/spans"

  messaging-publisher:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/messaging-publisher:1.0.1
    hostname: "messaging-publisher"
    ports:
     - "7090:8080"
    environment: #sub these with jenkins vars
     - constraint:nodetype==*service*
     - SERVICE_NAME=messaging-publisher
     - JWT_SECRET=${JWT_SECRET}
     - CONSUL_SERVER=${CONSUL_SERVER}
     - CONSUL_TOKEN=${CONSUL_MASTER_TOKEN}
     - CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/messaging-publisher
     - "TRACE_URL=http://zipkin:9411/api/v1/spans"

  task-resources:
    image: mobileapps.vaftl.us:9250/ckm/task-resources:1.0.5
    hostname: "task-resources"
    expose:
      - "8080"
    ports:
      - "8080"
    environment:
      - "constraint:nodetype==*service*"
      - "SERVICE_NAME=task-resources"
      - "SERVICE_TAGS=local"
      - "CONSUL_SERVER=consul:8500"
      - "CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF"
      - "CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/trs"
      - "JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication"
      - "USE_ENVCONSUL=true"
      - JWT_SECRET=testtesttest

###########################
### SHARED SERVICES END ###
###########################

##############################
### VETERAN SERVICES START ###
##############################

# Right of Access (ROA) service and oracle DB mock. ROA is an internal service that allows veterans to review and grant
# access to their medical information. Veteran users must complete ROA before they can use any other mobile app.
#
  roa-services:
    image: mobileapps.vaftl.us:9250/ckm/docker-roa-service:1.0.11
    restart: on-failure
    links:
      - mock-roa
    depends_on:
      - mock-roa
    ports:
     - "8086:8080"
    environment:
      # Use Vault
      # - VAULT_ADDR=http://vault:8200
      # - SECRET_PATH=secret/local/roa-service
      # Use Consul
      - USE_ENVCONSUL=true
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=appconfig/local/roa-service
      - DB_ROA_USERNAME=HADB # pulled from vault
      - DB_ROA_PASSWORD=m0ckpass01 # pulled from vault
      - SERVICE_TAGS=local
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication
      - JWT_SECRET=testtesttest
      - DB_ROA_URL=jdbc:oracle:thin:@mock-roa:1521:xe
      - VAMF_ENVIRONMENT=local
      #- JWT_PUBLIC_KEY=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwRs7d+tRAuK4soDInuKp51lTTTXWN8okXR3/gSHiIB+q7vZeAGWA8ULjCYuECLde8tS6OxzZwSj/oM0kZBXuHKYq2ukWKjTEmOwlpQW4vBpX60bcx5rXwoEjbcWghK9oVWwY4OwbAJ4TYklkUHZC5buQ+8RU59u6FIWSv2N3D9VBkfYsHvp3O4aXVaE8dZ0dxldUdv/WePoLkCeUYgLsGyDg/zsZvDrX1+yvNsjNNmB/ksJSoptMv9CfyUpSXsfov+8GhBCtgzDvgn32kw79wPsrTkgnC0DRtuv+y3qCXX+ZJ6cbJ31tVus9AadUn2CrWJur6/KRYsniQaEnfA43hwIDAQAB

## ROA WEB
  roa-web:
    image: mobileapps.vaftl.us:9250/ckm/docker-roa-web
    ports:
     - "8087:80"
    environment:
    - SERVICE_TAGS=local
    - SERVICE_NAME=roa-web

#  hdr-mock:
#    image: mobileapps.vaftl.us:9250/ckm/docker-hdr-mock
#    ports:
#    - "8080"
#
### HDR (Health Data Repository) Service
#  hdr-service:
#    image: mobileapps.vaftl.us:9250/ckm/docker-hdr-service
#    environment:
#      - HDR_URL=http://hdr-mock:8080/hdr/mockPathwaysHttpBinding
#      - CORS_ALLOWED_ORIGIN=*
#      - SERVICE_NAME=hdr-service
#      - SERVICE_TAGS=local
#      - CONSUL_SERVER=${CONSUL_SERVER}
#      - CONSUL_TOKEN=${CONSUL_TOKEN}
#      - CONSUL_PATH=appconfig/local/hdr
#      - JWT_SECRET=testtesttest
#    links:
#      - hdr-mock
#    ports:
#      - 8094:8080

  veteran-video-connect-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/veteran-video-connect-service:3.0.0
    ports:
      - "8280:8080"
    environment:
      - constraint:nodetype==*service*
      - SERVICE_NAME=veteran-video-connect-service
      - SERVICE_TAGS=local
      - JWT_SECRET=testtesttest
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/veteran-video-connect-service
      - "TRACE_URL=http://localhost:9411/api/v1/spans"

# IAM SSOe Mock - Injects HTTP headers to simulate SSOe token header injection. Allows log in/out.
  iamssoe-proxy-mock:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/idp-proxy-mock-shared:1.1-user-services-1.8.0
    container_name: iamssoe-proxy-mock
    ports:
      - 9000:80
    environment:
      - DB_HOST=iamssoe-db-mock
      - DB_PASSWORD=MySqlAdmin$$
      - API_GATEWAY_URL=http://apigateway
      - "CLIENT_LANDING=/users/v1/landing?redirect_uri="
    volumes:
      - /tmp/ssoenothing:/usr/local/openresty/nginx/conf/secured

#Mock database to store identity information
  iamssoe-db-mock:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/idp-db-mock-shared:1.1-user-services-1.8.0
    container_name: iamssoe-db-mock
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=MySqlAdmin$$
      - MYSQL_DATABASE=MockUser

############################
### VETERAN SERVICES END ###
############################

############################
### STAFF SERVICES START ###
############################

#Patient context service
  patient-context:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/patient-context:2.0.5
    ports:
      - '3001:3001'
    links:
      - var-mongo-db-mock
    depends_on:
      - var-mongo-db-mock
    environment:
      - "constraint:nodetype==*service*"
      - "CONSUL_SERVER=consul:8500"
      - "CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF"
      - "CONSUL_PATH=appconfig/local/patient-context"
      - SERVICE_TAGS=local
      - SERVICE_NAME=patient-context

# Mock for IAM SAML token
  mock-wstrust:
    image: mobileapps.vaftl.us:9250/ckm/sts-mock:latest
    environment:
      - SERVICE_TAGS=local
      - SERVICE_NAME=mock-wstrust

# Mock SSOi
  ssoi-mock:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/ssoi-mock:latest
    ports:
      - 9001:80
    environment:
      - API_GATEWAY_URL=http://apigateway
      - PROTECTED_PATTERNS=/jwt,/dementiacareprovider,/paincoachprovider,/gdxprovider/,/mentalhealthcheckupprovider/,/PatientSearchService,/skin%-check,/ClinicalEventService,/SkinCheckServices,/annie-provider-beta/,/ivs/,/immCampaign/v2/,/patient-viewer/v4/,/schedulingmgr/v2/,/users/v1/landing
      - "USERS={\"users\": [
          {\"userId\": \"vhastaff01\", \"headers\": {
            \"ADDOMAIN\": \"vha\", \"ADEMAIL\": \"test01.Staff01@va.gov\", \"LASTNAME\": \"Staff01\", \"FIRSTNAME\": \"Test01\",
            \"SESSIONSCOPE\": \"B\", \"VAUID\": \"1984\", \"ADSAMACCOUNTNAME\": \"staff01t\", \"ACCESSROLES\": \"CBSS_Access\",
            \"DODEDIPNID\": \"1020002350\", \"VISTAID\": \"523|22228439^PN^523^USVHA|A,590|11128439^PN^590^USVHA|A\", \"SECID\": \"0000028347\",
            \"MVIICN\": \"1008693670V746966\", \"VISTAIDRAW\": \"523|22228439^PN^523^USVHA|A^590|11128439^PN^590^USVHA|A\",
            \"ORGANIZATIONID\": \"urn:oid:2.16.840.1.113883.4.349\", \"ASSURLEVEL\": \"2\", \"ORGANIZATION\": \"Department of Veterans Affairs\",
            \"PROOFINGAUTH\": \"VA\", \"ROLE\": \"role1\", \"ISSUEINSTANT\": \"2017-06-19T13:37:16Z\", \"AUTHNTYPE\": \"Direct\",
            \"ADUPN\": \"tstaff01@iam.va.local\", \"TRANSACTIONID\": \"00000000000000000000000036d0e30a-0ad4-5947d38c-3688-00fa4fca\",
            \"SSOI_LANDING_URL\": \"http://not_set\",
            \"SSOI_LOGGEDOUT_URL\": \"http://not_set\",
            \"IAMSESSION\": \"test\"
          } },
          {\"userId\": \"vhastaff02\", \"headers\": {
            \"LASTNAME\": \"Staff02\", \"FIRSTNAME\": \"Test02\",
            \"ADUPN\": \"tstaff01@iam.va.local\",
            \"VISTAID\": \"590|10300252^PN^590^USVHA|A,500|12744^PN^500^USVHA|A\"
          } }
        ] }"

# SUD Service
  sud-service:
    image: mobileapps.vaftl.us:9250/ckm/docker-sud-service:1.1.2
    restart: on-failure
    links:
      - mock-roa
    depends_on:
      - mock-roa
    environment:
      # Use Vault
      # - VAULT_ADDR=http://vault:8200
      # - SECRET_PATH=secret/local/sud-service
      # Use consul
      - USE_ENVCONSUL=true
      - CONSUL_SERVER=consul:8500
      - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
      - CONSUL_PATH=appconfig/local/sud
      - DB_SUD_URL=jdbc:oracle:thin:@//mock-roa:1521/xe
      - DB_SUD_USERNAME=HADB
      - DB_SUD_PASSWORD=m0ckpass01
      - JWT_SECRET=testtesttest
      - APP_LOGGING_LEVEL=INFO
      - ROOT_LOGGING_LEVEL=INFO
      - VAMF_ENVIRONMENT=local
    ports:
      - 8095:8080

# SUD Web Application
  sud-web:
    image: mobileapps.vaftl.us:9250/ckm/docker-sud-web:1222
    ports:
      - 8096:80

# Provider Context Selector Web Application
  pcs-web:
    image: mobileapps.vaftl.us:9250/ckm/pcs-web:1.0.1
    ports:
    - 8093:80
    environment:
    - SERVICE_TAGS=local
    - SERVICE_80_NAME=pcs-web

  personal-preference-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/personal-preference-service:1.0.5
    ports:
     - "8287:8080"
    environment: #sub these with jenkins vars
     - constraint:nodetype==*service*
     - SERVICE_NAME=personal-preference-service
     - SERVICE_TAGS=local
     - VAMF_ENVIRONMENT=local
     - JWT_SECRET=testtesttest
     - CONSUL_SERVER=${CONSUL_SERVER}
     - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
     - CONSUL_PATH=appconfig/${VAMF_ENVIRONMENT}/personal-preference-service
     - "TRACE_URL=http://zipkin:9411/api/v1/spans"

   # Mock for VIA data service
   #  mock-via:
   #    image: mobileapps.vaftl.us:9250/ckm/via-mock-service:1.0.5

  # VistA Data Services (VDS) - exposes vista data by using the mdws to via adapter
  vista-data-services:
    image: mobileapps.vaftl.us:9250/ckm/docker-vista-data-services:1.9.0
    #image: vista-data-services
    ports:
     - 8085:8080
     - 64085:64085
    environment:
     # Don't use Vault
     #- "VAULT_ADDR=http://vault:8200"
     #- "SECRET_PATH=secret/local/vista-data-services"
     # Use Consul
     - "USE_ENVCONSUL=true"
     - REDIS_HOST=redis
     - "CONSUL_SERVER=consul:8500"
     - "CONSUL_HTTP_ADDR=consul:8500"
     - "CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF"
     - "CONSUL_PATH=appconfig/local/vista-data-services"
     - "VAMF_ENVIRONMENT=local"
     - MDWS_ADAPTER_BASE_URL=http://mdws-via-adapter:8080/MdwsViaAdapter/v1/services
     - JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=64085
     - USER_SVC_URL=http://user-services:8080/users/v1
     - JWT_SECRET=testtesttest
     - "SERVER_USE_FORWARD_HEADERS=true"
     # Debug configuration (Ensure port ignored below is exposed for debugging in ports section)
     - SERVICE_8080_NAME=vista-data-services_v1
     - SERVICE_64085_IGNORE=true

  # VistA Scheduling Service (VSS) - exposes vista data by using the mdws to via adapter
  vista-scheduling-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/vista-scheduling-service:2.0.1-b1
    ports:
     - 8185:8080
     - 18096:5005
    environment:
     # Don't use Vault
     #- "VAULT_ADDR=http://vault:8200"
     #- "SECRET_PATH=secret/local/vista-data-services"
     # Use Consul
     - "USE_ENVCONSUL=true"
     - REDIS_HOST=redis
     - "CONSUL_SERVER=consul:8500"
     - "SERVICE_8080_NAME=vista-scheduling-service"
     - "CONSUL_HTTP_ADDR=consul:8500"
     - "CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF"
     - "CONSUL_PATH=appconfig/local/VistaSchedulingService"
     - "VAMF_ENVIRONMENT=local"
     - VIA_BASE_URL=http://10.1.0.8:8089/via-webservices/services
     - MDWS_ADAPTER_BASE_URL=http://mdws-via-adapter:8080/MdwsViaAdapter/v1/services
     - JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
     - USER_SVC_URL=http://user-services:8080/users/v1
     - JWT_SECRET=testtesttest
     - "SERVER_USE_FORWARD_HEADERS=true"
     # Debug configuration (Ensure port ignored below is exposed for debugging in ports section)
     - SERVICE_64085_IGNORE=true
     - REQUESTING_APP=VAR_App
     - CONSUMING_APP_TOKEN=APP_TOKEN
     - CONSUMING_APP_PASSWORD=passw0rd123

  ### MDWS to VIA adapter
  mdws-via-adapter:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/mdws-via-adapter:1.3.3
    ports:
     - 8180:8180
     - 64087:64087
    environment:
    # Vault
    #- "VAULT_ADDR=http://vault:8200"
    #- "SECRET_PATH=secret/local/mdws-via-adapter"
    # Use Consul
    - "USE_ENVCONSUL=true"
    - "CONSUL_SERVER=consul:8500"
    - "CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF"
    - "CONSUL_PATH=appconfig/local/mdws-via-adapter"
    - "CONSUL_HTTP_ADDR=consul:8500"
    - "VAMF_ENVIRONMENT=local"
    # Mock Via
    #- VIA_BASE_URL=http://mock-via:8080/via-webservices/via-webservices/services
    # Live Via (AV)
    - VIA_BASE_URL=http://10.1.0.8:8089/via-webservices/services
    - JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=64087
    - TRUSTSTORE_PASSWORD=password
    - REDIS_HOST=redis
    - JWT_REQUIRED_ROLE=STAFF
    - USER_SVC_URL=http://user-services:8080/users/v1
    #- JWT_PUBLIC_KEY=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwRs7d+tRAuK4soDInuKp51lTTTXWN8okXR3/gSHiIB+q7vZeAGWA8ULjCYuECLde8tS6OxzZwSj/oM0kZBXuHKYq2ukWKjTEmOwlpQW4vBpX60bcx5rXwoEjbcWghK9oVWwY4OwbAJ4TYklkUHZC5buQ+8RU59u6FIWSv2N3D9VBkfYsHvp3O4aXVaE8dZ0dxldUdv/WePoLkCeUYgLsGyDg/zsZvDrX1+yvNsjNNmB/ksJSoptMv9CfyUpSXsfov+8GhBCtgzDvgn32kw79wPsrTkgnC0DRtuv+y3qCXX+ZJ6cbJ31tVus9AadUn2CrWJur6/KRYsniQaEnfA43hwIDAQAB
    - JWT_SECRET=testtesttest
    # Debug configuration (Ensure port ignored below is exposed for debugging in ports section)
    - SERVICE_8080_NAME=mdws-via-adapter
    - SERVICE_64087_IGNORE=true
    - REQUESTING_APP=VAR_App
    - CONSUMING_APP_TOKEN=APP_TOKEN
    - CONSUMING_APP_PASSWORD=passw0rd123

# Staff Video Connect Resources (SVC Services/Resource)
  staff-video-connect-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/staff-video-connect-service:2.1.2
    ports:
     - "8293:8080"
    links:
      - video-visits-service
    depends_on:
      - video-visits-service
    environment: #sub these with jenkins vars
     - constraint:nodetype==*service*
     - SERVICE_NAME=staff-video-connect-service
     - SERVICE_TAGS=local
     - JWT_SECRET=testtesttest
     - VAMF_ENVIRONMENT=local
     - CONSUL_SERVER=consul:8500
     - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
     - CONSUL_PATH=appconfig/local/staff-video-connect-service
     - "TRACE_URL=http://zipkin:9411/api/v1/spans"

  # apt-reminder-publisher:
  #   image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/apt-reminder-publisher:1.0.1
  #   depends_on:
  #    - video-visits-oracle-mock
  #    - video-visits-mongo-mock
  #   ports:
  #    - "8285:8080"
  #   environment: #sub these with jenkins vars
  #    - constraint:nodetype==*service*
  #    - SERVICE_NAME=apt-reminder-publisher
  #    - SERVICE_TAGS=local
  #    - VAMF_ENVIRONMENT=local
  #    - JWT_SECRET=${JWT_SECRET}
  #    - CONSUL_SERVER=consul:8500
  #    - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
  #    - CONSUL_PATH=appconfig/local/apt-reminder-publisher
  #    - "TRACE_URL=http://zipkin:9411/api/v1/spans"
  #    - JWT_PUBLIC_KEY=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwRs7d+tRAuK4soDInuKp51lTTTXWN8okXR3/gSHiIB+q7vZeAGWA8ULjCYuECLde8tS6OxzZwSj/oM0kZBXuHKYq2ukWKjTEmOwlpQW4vBpX60bcx5rXwoEjbcWghK9oVWwY4OwbAJ4TYklkUHZC5buQ+8RU59u6FIWSv2N3D9VBkfYsHvp3O4aXVaE8dZ0dxldUdv/WePoLkCeUYgLsGyDg/zsZvDrX1+yvNsjNNmB/ksJSoptMv9CfyUpSXsfov+8GhBCtgzDvgn32kw79wPsrTkgnC0DRtuv+y3qCXX+ZJ6cbJ31tVus9AadUn2CrWJur6/KRYsniQaEnfA43hwIDAQAB

  # apt-reminder-subscriber:
  #   image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ablevets/apt-reminder-subscriber:1.0.1
  #   depends_on:
  #    - video-visits-mongo-mock
  #    - video-visits-rabbitmq
  #    - hdr-service
  #   ports:
  #    - "8286:8080"
  #   environment:
  #    - constraint:nodetype==*service*
  #    - SERVICE_NAME=apt-reminder-subscriber
  #    - SERVICE_TAGS=local
  #    - VAMF_ENVIRONMENT=local
  #    - JWT_SECRET=${JWT_SECRET}
  #    - CONSUL_SERVER=consul:8500
  #    - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
  #    - CONSUL_PATH=appconfig/local/apt-reminder-subscriber

##########################
### STAFF SERVICES END ###
##########################

  var-resources:
    image: ${ENV_IMAGE_ROOT}/var-resources:${VAR_RESOURCES_VERSION}
    ports:
     - "9092:8080"
     - "64058:64058"
    links:
     - var-messaging-microservice
     - facility-service
     - mock-mvi
    depends_on:
     - var-messaging-microservice
     - facility-service
     - mock-mvi
    environment:
     - SERVICE_64058_IGNORE=true
     - SERVICE_8080_NAME=var-resources
     - SERVICE_TAGS=local
     - SERVICE_NAME=var-resources
     - CONSUL_SERVER=consul:8500
     - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
     - CONSUL_PATH=appconfig/local/var-resources
     - mock.mvi=false
     - JWT_SECRET=testtesttest
     - JAVA_OPTS=-XX:+CMSClassUnloadingEnabled -Xrs -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=64058

  var-web:
    image: ${ENV_IMAGE_ROOT}/var-web:${VAR_WEB_VERSION}
    ports:
      - "9090:80"
    environment:
      - SERVICE_TAGS=local
      - SERVICE_NAME=var-web

  scheduling-manager-resources:
    image: ${ENV_IMAGE_ROOT}/scheduling-manager-resources:${SM_RESOURCES_VERSION}
    ports:
     - "9070:8080"
     - "64059:64059"
    environment:
     - SERVICE_64059_IGNORE=true
     - SERVICE_TAGS=local
     - SERVICE_NAME=scheduling-manager-resources
     - CONSUL_SERVER=consul:8500
     - CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF
     - CONSUL_PATH=appconfig/local/scheduling-manager-resources
     - JWT_SECRET=testtesttest
     - JAVA_OPTS=-XX:+CMSClassUnloadingEnabled -Xrs -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=64059

  scheduling-manager-web:
    image: ${ENV_IMAGE_ROOT}/scheduling-manager-web:${SM_WEB_VERSION}
    ports:
      - "9071:80"
    environment:
      - SERVICE_TAGS=local
      - SERVICE_NAME=scheduling-manager-web

  appointment-service:
    image: 181140462490.dkr.ecr.us-east-1.amazonaws.com/ckm/mobile-appointment-service:1.1.0
    ports:
      - "9097:8080"
      - "19097:5005"
    depends_on:
      - video-visits-mongo-mock
      - vista-scheduling-service
      - video-visits-service
    environment:
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
      - "USE_ENVCONSUL=false"
      - "CONSUL_SERVER=consul:8500"
      - "CONSUL_HTTP_ADDR=consul:8500"
      - "CONSUL_TOKEN=7BE784A4-7498-4469-BE2F-9C3B9444DFEF"
      - "CONSUL_PATH=appconfig/local/mobile-appointment-service"
      - "VAMF_ENVIRONMENT=local"
      - SERVICE_8080_NAME=appointment-service
      - SERVICE_64085_IGNORE=true
      - MAX_RESULTSET_SIZE=40
      - MAX_PAGE_SIZE=20
      - VVS_BASE_URL=http://video-visits-service:8080/video-visit-resources/v2
      - VDS_SCH_SERVICE_URL=http://vista-scheduling-service:8080/VistaSchedulingService/v2
      - VIA_BASE_URL=http://via-weblogic:7011/via-webservices/services
      - REQUESTING_APP=
      - CONSUMING_APP_PASSWORD=TEST_PASSWORD
      - CONSUMING_APP_TOKEN=TEST_TOKEN
      # - VIA_BASE_URL=http://10.1.0.8:8089/via-webservices/services # ablevets VIA instance 
      
networks:
  default:
    external:
      name: varnextgenlocalenvironment_default

