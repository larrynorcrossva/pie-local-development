#!/usr/bin/env bash

. app.env

. composed-services.sh


function start_all_shared(){
    start_fixtures
    sleep 15
    start_data_seed
    start_core
    sleep 15
    start_shared_services
}

function start_all(){
    start_all_shared
    sleep 15
    start_vet
    start_staff
    # added by VAOS Internal team
    echo -e "\nWaiting 30s for Staff Services...\n"
    sleep 30
    start_var
    sleep 15
    start_sm
    sleep 15
    start_via
    echo -e "\nWaiting 30s for VIA...\n"
    sleep 30
    start_vista
}

function start_all_vet(){
    start_all_shared
    sleep 15
    start_vet
    sleep 15
    start_var
}

function start_all_staff(){
    start_all_shared
    sleep 15
    start_staff
    sleep 15
    start_sm
}

function start_fixtures(){
    echo -e "\nStarting Fixtures\n"
    docker-compose stop "${fixtures[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull --ignore-pull-failures "${fixtures[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${fixtures[@]}"
}

function start_vista(){
    echo -e "\nStarting VistA\n"
    docker-compose stop "${vista[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull --ignore-pull-failures "${vista[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${vista[@]}"
}

function start_via(){
    echo -e "\nStarting VIA\n"
    docker-compose stop "${via[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull --ignore-pull-failures "${via[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps via-oracle
    echo -e "\nWaiting 30s for via-oracle...\n"
    sleep 30
    docker-compose up -d --force-recreate --no-deps via-weblogic
}

function start_data_seed(){
    echo -e "\nStarting Data Seed\n"
    docker-compose stop var-mongo-data-seed
    if [ "$PULL" = true ] ; then
        docker-compose pull var-mongo-data-seed
    fi
    docker-compose up -d var-mongo-data-seed
}

function start_core(){
    ## Start Consul first
    echo -e "\nStarting Consul\n"
    # docker-compose up -d consul vault || (echo "*** FAILED: Could not start Consul or Vault using docker-compose." && exit -1)

    docker-compose up -d consul || (echo "*** FAILED: Could not start Consul or Vault using docker-compose." && exit -1)

    echo -e "\nWaiting 30s for Consul and Vault...\n"
    sleep 30s

    echo -e "\nRegistering core services to Consul... \n"
    ./consul-registration/register-core.sh

    if [ "$PULL" = true ] ; then
        docker-compose pull "${core[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${core[@]}" || (echo "*** FAILED: Could not start core containers using docker-compose." && exit -1)
}

function start_shared_services(){
    echo -e "\n Starting Shared Sercices\n"
    ./consul-registration/register-shared-services.sh
    docker-compose stop "${ss[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull "${ss[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${ss[@]}"
}

function start_vet(){
    echo -e "\nStarting all Veteran Services\n"
    docker-compose stop "${vet[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull "${vet[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${vet[@]}"
}

function start_staff(){
    echo -e "\nStarting all Staff Services\n"
    ./consul-registration/register-staff.sh
    docker-compose stop "${staff[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull "${staff[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${staff[@]}"
}

function start_var(){
    echo -e "\nStarting VAOS\n"
    ./consul-registration/register-var.sh
    docker-compose stop "${var[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull "${var[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${var[@]}"
}

function start_sm(){
    echo -e "\nStarting Scheduling Manager\n"
    ./consul-registration/register-sm.sh
    docker-compose stop "${sm[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull "${sm[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${sm[@]}"
}

function start_vats(){
    echo -e "\nStarting VATS\n"
    ./consul-registration/register-vats.sh
    docker-compose stop "${vats[@]}"
    if [ "$PULL" = true ] ; then
        docker-compose pull "${vats[@]}"
    fi
    docker-compose up -d --force-recreate --no-deps "${vats[@]}"
}
