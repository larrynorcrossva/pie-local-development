USE [CC_PIE]
GO
/****** Object:  StoredProcedure [App].[dev_merge_Caresite]    Script Date: 7/2/2019 4:34:24 PM ******/
DROP PROCEDURE [App].[dev_merge_Caresite]
GO
--
DROP PROCEDURE [App].[dev_merge_NonVAProvider]
GO
--
DROP PROCEDURE [App].[dev_merge_ProviderAgreement]
GO
--
DROP PROCEDURE [App].[dev_merge_ProviderService]
GO
--
--
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [App].[dev_merge_Caresite]
AS
DECLARE @T TABLE([CareSite_stg_Id] INT);

MERGE [App].[dev_CareSite_V] AS T
USING [App].[dev_CareSite_stg_V] AS S
ON T.[CareSiteGuid] = S.[CareSiteGuid]
WHEN MATCHED THEN UPDATE
SET T.[CareSiteGuid]  = S.[CareSiteGuid],
T.[CareSiteType]  = S.[CareSiteType],
T.[CareSiteName]  = S.[CareSiteName],
T.[AddressComposite]    = S.[AddressComposite],
T.[AddressStreet1]      = S.[AddressStreet1],
T.[AddressStreet2]      = S.[AddressStreet2],
T.[City]    = S.[City],
T.[State]   = S.[State],
T.[ZipCode] = S.[ZipCode],
T.[Country] = S.[Country],
T.[Latitude]      = S.[Latitude],
T.[Longitude]     = S.[Longitude],
T.[MainSitePhone] = S.[MainSitePhone],
T.[DEANumber]     = S.[DEANumber],
T.[CareSiteEmail] = S.[CareSiteEmail],
T.[CareSiteFax]   = S.[CareSiteFax],
T.[VersionNumber] = S.[VersionNumber],
T.[CareSiteStatus]      = S.[CareSiteStatus],
T.[CareSiteStatusReason]      = S.[CareSiteStatusReason],
T.[OtherName]     = S.[OtherName],
T.[Owner]   = S.[Owner],
T.[OwningUser]    = S.[OwningUser],
T.[OwningTeam]    = S.[OwningTeam],
T.[OwningBusinessUnit]  = S.[OwningBusinessUnit],
T.[VISN]    = S.[VISN],
T.[ParentStationNumber] = S.[ParentStationNumber],
T.[SiteContact]   = S.[SiteContact],
T.[IsExternal]    = S.[IsExternal],
T.[IsHandicapAccessible]      = S.[IsHandicapAccessible],
T.[IsUseGeocodingService]     = S.[IsUseGeocodingService],
T.[IsUseAddressValidationService]   = S.[IsUseAddressValidationService],
T.[ProviderGroup] = S.[ProviderGroup],
T.[StationName]   = S.[StationName],
T.[Facility]      = S.[Facility],
T.[FacilityType]  = S.[FacilityType],
T.[PPMSInactive_Date]   = S.[PPMSInactive_Date],
T.[CenterOfExcellence]  = S.[CenterOfExcellence],
T.[DeliveryPointValidation]   = S.[DeliveryPointValidation],
T.[BingConfidenceLevel] = S.[BingConfidenceLevel],
T.[BingSuggestedPostalAddress]      = S.[BingSuggestedPostalAddress],
T.[AddressValidationConfidenceScore]      = S.[AddressValidationConfidenceScore],
T.[IsAddressValidated]  = S.[IsAddressValidated],
T.[IsVACareSite]  = S.[IsVACareSite],
T.[IsGeocoded]    = S.[IsGeocoded],
T.[PPMSCreated_By]      = S.[PPMSCreated_By],
T.[PPMSCreatedOn_Date]  = S.[PPMSCreatedOn_Date],
T.[PPMSModified_By]     = S.[PPMSModified_By],
T.[PPMSModifiedOn_Date] = S.[PPMSModifiedOn_Date],
T.[Created_By]    = S.[Created_By],
T.[Created_Date]  = S.[Created_Date],
T.[Modified_By]   = S.[Modified_By],
T.[Modified_Date] = S.[Modified_Date]
WHEN NOT MATCHED BY TARGET THEN
INSERT (CareSiteGuid,
CareSiteType,
CareSiteName,
AddressComposite,
AddressStreet1,
AddressStreet2,
City,
State,
ZipCode,
Country,
Latitude,
Longitude,
MainSitePhone,
DEANumber,
CareSiteEmail,
CareSiteFax,
VersionNumber,
CareSiteStatus,
CareSiteStatusReason,
OtherName,
Owner,
OwningUser,
OwningTeam,
OwningBusinessUnit,
VISN,
ParentStationNumber,
SiteContact,
IsExternal,
IsHandicapAccessible,
IsUseGeocodingService,
IsUseAddressValidationService,
ProviderGroup,
StationName,
Facility,
FacilityType,
PPMSInactive_Date,
CenterOfExcellence,
DeliveryPointValidation,
BingConfidenceLevel,
BingSuggestedPostalAddress,
AddressValidationConfidenceScore,
IsAddressValidated,
IsVACareSite,
IsGeocoded,
PPMSCreated_By,
PPMSCreatedOn_Date,
PPMSModified_By,
PPMSModifiedOn_Date,
Created_By,
Created_Date,
Modified_By,
Modified_Date) VALUES (
S.[CareSiteGuid],
S.[CareSiteType],
S.[CareSiteName],
S.[AddressComposite],
S.[AddressStreet1],
S.[AddressStreet2],
S.[City],
S.[State],
S.[ZipCode],
S.[Country],
S.[Latitude],
S.[Longitude],
S.[MainSitePhone],
S.[DEANumber],
S.[CareSiteEmail],
S.[CareSiteFax],
S.[VersionNumber],
S.[CareSiteStatus],
S.[CareSiteStatusReason],
S.[OtherName],
S.[Owner],
S.[OwningUser],
S.[OwningTeam],
S.[OwningBusinessUnit],
S.[VISN],
S.[ParentStationNumber],
S.[SiteContact],
S.[IsExternal],
S.[IsHandicapAccessible],
S.[IsUseGeocodingService],
S.[IsUseAddressValidationService],
S.[ProviderGroup],
S.[StationName],
S.[Facility],
S.[FacilityType],
S.[PPMSInactive_Date],
S.[CenterOfExcellence],
S.[DeliveryPointValidation],
S.[BingConfidenceLevel],
S.[BingSuggestedPostalAddress],
S.[AddressValidationConfidenceScore],
S.[IsAddressValidated],
S.[IsVACareSite],
S.[IsGeocoded],
S.[PPMSCreated_By],
S.[PPMSCreatedOn_Date],
S.[PPMSModified_By],
S.[PPMSModifiedOn_Date],
S.[Created_By],
S.[Created_Date],
S.[Modified_By],
S.[Modified_Date])
OUTPUT S.CareSite_stg_Id INTO @T;
DELETE From [App].[dev_CareSite_stg_V] WHERE CareSite_stg_Id in (SELECT CareSite_stg_Id FROM @T);
GO
--
--
--
CREATE PROCEDURE [App].[dev_merge_NonVAProvider]
AS

DECLARE @T TABLE([NonVAProvider_stg_Id] INT);

MERGE [App].[dev_NonVAProvider_V] AS T
USING [App].[dev_NonVAProvider_stg_V] AS S
ON (T.[ProviderNpi] = S.[ProviderNpi])
WHEN MATCHED THEN UPDATE
SET T.[ProviderGuid] = S.[ProviderGuid],
T.[ProviderNpi] = S.[ProviderNpi],
T.[ProviderType]	= S.[ProviderType],
T.[ProviderName]	= S.[ProviderName],
T.[ProviderFirstName]	= S.[ProviderFirstName],
T.[ProviderMiddleName]	= S.[ProviderMiddleName],
T.[ProviderLastName] = S.[ProviderLastName],
T.[Phone]	= S.[Phone],
T.[MainPhone]	= S.[MainPhone],
T.[OtherPhone]	= S.[OtherPhone],
T.[Telephone2]	= S.[Telephone2],
T.[Telephone3]	= S.[Telephone3],
T.[WebSite]	= S.[WebSite],
T.[Email]	= S.[Email],
T.[EmailAddress2]	= S.[EmailAddress2],
T.[EmailAddress3]	= S.[EmailAddress3],
T.[Fax]	= S.[Fax],
T.[PrimaryDirectMessagingAddress]	= S.[PrimaryDirectMessagingAddress],
T.[SecondaryDirectMessagingAddress]	= S.[SecondaryDirectMessagingAddress],
T.[Ethnicity]	= S.[Ethnicity],
T.[Gender]	= S.[Gender],
T.[Religion]	= S.[Religion],
T.[IndivProviderDateOfBirth]	= S.[IndivProviderDateOfBirth],
T.[OrganizationId]	= S.[OrganizationId],
T.[OrganizationStatus]	= S.[OrganizationStatus],
T.[BillingAddress1Name]	= S.[BillingAddress1Name],
T.[BillingAddress1ID]	= S.[BillingAddress1ID],
T.[BillingAddress1Composite]	= S.[BillingAddress1Composite],
T.[BillingAddress1Street1]	= S.[BillingAddress1Street1],
T.[BillingAddress1Street2]	= S.[BillingAddress1Street2],
T.[BillingAddress1Street3]	= S.[BillingAddress1Street3],
T.[BillingAddress1City]	= S.[BillingAddress1City],
T.[BillingAddress1County]	= S.[BillingAddress1County],
T.[BillingAddress1PostOfficeBox]	= S.[BillingAddress1PostOfficeBox],
T.[BillingAddress1StateProvince]	= S.[BillingAddress1StateProvince],
T.[BillingAddress1ZipPostalCode]	= S.[BillingAddress1ZipPostalCode],
T.[BillingAddress1CountryRegion]	= S.[BillingAddress1CountryRegion],
T.[BillingAddress1Latitude]	= S.[BillingAddress1Latitude],
T.[BillingAddress1Longitude]	= S.[BillingAddress1Longitude],
T.[BillingAddressPhone]	= S.[BillingAddressPhone],
T.[BillingAddress1Telephone2]	= S.[BillingAddress1Telephone2],
T.[BillingAddress1Telephone3]	= S.[BillingAddress1Telephone3],
T.[BillingAddress1Fax]	= S.[BillingAddress1Fax],
T.[AgreementCount]	= S.[AgreementCount],
T.[AgreementCountLastUpdatedOn]	= S.[AgreementCountLastUpdatedOn],
T.[AgreementCountState]	= S.[AgreementCountState],
T.[ExternalHealthProviderType] = S.[ExternalHealthProviderType],
T.[ExternalInstitutionDEANumber]	= S.[ExternalInstitutionDEANumber],
T.[ExternalLeieCheckDate]	= S.[ExternalLeieCheckDate],
T.[ExternalValidationSource]	= S.[ExternalValidationSource],
T.[Facility]	= S.[Facility],
T.[FeeSchedule]	= S.[FeeSchedule],
T.[ProviderStatus]	= S.[ProviderStatus],
T.[ProviderStatusReason]	= S.[ProviderStatusReason],
T.[ParentProvider]	= S.[ParentProvider],
T.[Process]	= S.[Process],
T.[EMRSystem]	= S.[EMRSystem],
T.[EMRSystemOther]	= S.[EMRSystemOther],
T.[Owner]	= S.[Owner],
T.[OwnedCareSite]	= S.[OwnedCareSite],
T.[Ownership] = S.[Ownership],
T.[OwningBusinessunit]	= S.[OwningBusinessunit],
T.[OwningTeam]	= S.[OwningTeam],
T.[OwningUser]	= S.[OwningUser],
T.[PreferredDay]	= S.[PreferredDay],
T.[PreferredMethodOfContact]	= S.[PreferredMethodOfContact],
T.[PreferredTime]	= S.[PreferredTime],
T.[PAMigrationKey]	= S.[PAMigrationKey],
T.[RecordSource]	= S.[RecordSource],
T.[RelationshipType]	= S.[RelationshipType],
T.[ServiceProviderType]	= S.[ServiceProviderType],
T.[InternalType]	= S.[InternalType],
T.[InternalAppointmentStatus]	= S.[InternalAppointmentStatus],
T.[InternalLicensingJurisdiction]	= S.[InternalLicensingJurisdiction],
T.[LastValidated]	= S.[LastValidated],
T.[SpecialInstruction]	= S.[SpecialInstruction],
T.[ValidationResetDate]	= S.[ValidationResetDate],
T.[IsValidationReset]	= S.[IsValidationReset],
T.[IsIndividualAcceptingNewPatients]	= S.[IsIndividualAcceptingNewPatients],
T.[IsInternalCanCreateHealthCareOrders]	= S.[IsInternalCanCreateHealthCareOrders],
T.[IsDirectMessagingVHIE]	= S.[IsDirectMessagingVHIE],
T.[IsHSRM]	= S.[IsHSRM],
T.[IsExternal] = S.[IsExternal],
T.[IsRefDoc]	= S.[IsRefDoc],
T.[IsOnLeie]	= S.[IsOnLeie],
T.[IsLeieValidated]	= S.[IsLeieValidated],
T.[IsLicenseValidated]	= S.[IsLicenseValidated],
T.[IsProviderContactValidated]= S.[IsProviderContactValidated],
T.[IsAddressValidated]	= S.[IsAddressValidated],
T.[IsNppesNPIValidated]	= S.[IsNppesNPIValidated],
T.[IsSAMValidated]	= S.[IsSAMValidated],
T.[IsGeocoded] = S.[IsGeocoded],
T.[IsPhone]	= S.[IsPhone],
T.[IsMail]	= S.[IsMail],
T.[IsSecuredEmail]	= S.[IsSecuredEmail],
T.[IsPrimaryCarePhysician]	= S.[IsPrimaryCarePhysician],
T.[IsIndividualPrimaryCareProviderAcceptingVA]	= S.[IsIndividualPrimaryCareProviderAcceptingVA],
T.[IsAccountableCareOrganization]	= S.[IsAccountableCareOrganization],
T.[IsSendMarketingMaterials]	= S.[IsSendMarketingMaterials],
T.[IsDoNotAllowPhoneCalls]	= S.[IsDoNotAllowPhoneCalls],
T.[IsDoNotAllowFaxes]	= S.[IsDoNotAllowFaxes],
T.[IsDoNotAllowEmails]	= S.[IsDoNotAllowEmails],
T.[IsDoNotAllowBulkEmails]	= S.[IsDoNotAllowBulkEmails],
T.[IsDoNotAllowMails]	= S.[IsDoNotAllowMails],
T.[IsDoNotAllowBulkMails]	= S.[IsDoNotAllowBulkMails],
T.[IsContactPrefEmail]	= S.[IsContactPrefEmail],
T.[IsContactPrefFax]	= S.[IsContactPrefFax],
T.[IsDoNotSendMarketingMaterials]	= S.[IsDoNotSendMarketingMaterials],
T.[IsProcessed]	= S.[IsProcessed],
T.[PPMSLastUpdatedDate]	= S.[PPMSLastUpdatedDate],
T.[PPMSLastValidatedDate]	= S.[PPMSLastValidatedDate],
T.[PPMSCreated_By]	= S.[PPMSCreated_By],
T.[PPMSCreatedOn_Date]	= S.[PPMSCreatedOn_Date],
T.[PPMSModified_By]	= S.[PPMSModified_By],
T.[PPMSModifiedOn_Date]	= S.[PPMSModifiedOn_Date],
T.[InactiveFlag]	= S.[InactiveFlag],
T.[InactiveDate]	= S.[InactiveDate],
T.[Created_By]	= S.[Created_By],
T.[Created_Date]	= S.[Created_Date],
T.[Modified_By]	= S.[Modified_By],
T.[Modified_Date]	= S.[Modified_Date]
WHEN NOT MATCHED BY TARGET THEN
INSERT ([ProviderGuid],
[ProviderNpi],
[ProviderType],
[ProviderName],
[ProviderFirstName],
[ProviderMiddleName],
[ProviderLastName],
[Phone],
[MainPhone],
[OtherPhone],
[Telephone2],
[Telephone3],
[WebSite],
[Email],
[EmailAddress2],
[EmailAddress3],
[Fax],
[PrimaryDirectMessagingAddress],
[SecondaryDirectMessagingAddress],
[Ethnicity],
[Gender],
[Religion],
[IndivProviderDateOfBirth],
[OrganizationId],
[OrganizationStatus],
[BillingAddress1Name],
[BillingAddress1ID],
[BillingAddress1Composite],
[BillingAddress1Street1],
[BillingAddress1Street2],
[BillingAddress1Street3],
[BillingAddress1City],
[BillingAddress1County],
[BillingAddress1PostOfficeBox],
[BillingAddress1StateProvince],
[BillingAddress1ZipPostalCode],
[BillingAddress1CountryRegion],
[BillingAddress1Latitude],
[BillingAddress1Longitude],
[BillingAddressPhone],
[BillingAddress1Telephone2],
[BillingAddress1Telephone3],
[BillingAddress1Fax],
[AgreementCount],
[AgreementCountLastUpdatedOn],
[AgreementCountState],
[ExternalHealthProviderType],
[ExternalInstitutionDEANumber],
[ExternalLeieCheckDate],
[ExternalValidationSource],
[Facility],
[FeeSchedule],
[ProviderStatus],
[ProviderStatusReason],
[ParentProvider],
[Process],
[EMRSystem],
[EMRSystemOther],
[Owner],
[OwnedCareSite],
[Ownership],
[OwningBusinessunit],
[OwningTeam],
[OwningUser],
[PreferredDay],
[PreferredMethodOfContact],
[PreferredTime],
[PAMigrationKey],
[RecordSource],
[RelationshipType],
[ServiceProviderType],
[InternalType],
[InternalAppointmentStatus],
[InternalLicensingJurisdiction],
[LastValidated],
[SpecialInstruction],
[ValidationResetDate],
[IsValidationReset],
[IsIndividualAcceptingNewPatients],
[IsInternalCanCreateHealthCareOrders],
[IsDirectMessagingVHIE],
[IsHSRM],
[IsExternal],
[IsRefDoc],
[IsOnLeie],
[IsLeieValidated],
[IsLicenseValidated],
[IsProviderContactValidated],
[IsAddressValidated],
[IsNppesNPIValidated],
[IsSAMValidated],
[IsGeocoded],
[IsPhone],
[IsMail],
[IsSecuredEmail],
[IsPrimaryCarePhysician],
[IsIndividualPrimaryCareProviderAcceptingVA],
[IsAccountableCareOrganization],
[IsSendMarketingMaterials],
[IsDoNotAllowPhoneCalls],
[IsDoNotAllowFaxes],
[IsDoNotAllowEmails],
[IsDoNotAllowBulkEmails],
[IsDoNotAllowMails],
[IsDoNotAllowBulkMails],
[IsContactPrefEmail],
[IsContactPrefFax],
[IsDoNotSendMarketingMaterials],
[IsProcessed],
[PPMSLastUpdatedDate],
[PPMSLastValidatedDate],
[PPMSCreated_By],
[PPMSCreatedOn_Date],
[PPMSModified_By],
[PPMSModifiedOn_Date],
[InactiveFlag],
[InactiveDate],
[Created_By],
[Created_Date],
[Modified_By],
[Modified_Date]) VALUES (
    S.[ProviderGuid],
S.[ProviderNpi],
S.[ProviderType],
S.[ProviderName],
S.[ProviderFirstName],
S.[ProviderMiddleName],
S.[ProviderLastName],
S.[Phone],
S.[MainPhone],
S.[OtherPhone],
S.[Telephone2],
S.[Telephone3],
S.[WebSite],
S.[Email],
S.[EmailAddress2],
S.[EmailAddress3],
S.[Fax],
S.[PrimaryDirectMessagingAddress],
S.[SecondaryDirectMessagingAddress],
S.[Ethnicity],
S.[Gender],
S.[Religion],
S.[IndivProviderDateOfBirth],
S.[OrganizationId],
S.[OrganizationStatus],
S.[BillingAddress1Name],
S.[BillingAddress1ID],
S.[BillingAddress1Composite],
S.[BillingAddress1Street1],
S.[BillingAddress1Street2],
S.[BillingAddress1Street3],
S.[BillingAddress1City],
S.[BillingAddress1County],
S.[BillingAddress1PostOfficeBox],
S.[BillingAddress1StateProvince],
S.[BillingAddress1ZipPostalCode],
S.[BillingAddress1CountryRegion],
S.[BillingAddress1Latitude],
S.[BillingAddress1Longitude],
S.[BillingAddressPhone],
S.[BillingAddress1Telephone2],
S.[BillingAddress1Telephone3],
S.[BillingAddress1Fax],
S.[AgreementCount],
S.[AgreementCountLastUpdatedOn],
S.[AgreementCountState],
S.[ExternalHealthProviderType],
S.[ExternalInstitutionDEANumber],
S.[ExternalLeieCheckDate],
S.[ExternalValidationSource],
S.[Facility],
S.[FeeSchedule],
S.[ProviderStatus],
S.[ProviderStatusReason],
S.[ParentProvider],
S.[Process],
S.[EMRSystem],
S.[EMRSystemOther],
S.[Owner],
S.[OwnedCareSite],
S.[Ownership],
S.[OwningBusinessunit],
S.[OwningTeam],
S.[OwningUser],
S.[PreferredDay],
S.[PreferredMethodOfContact],
S.[PreferredTime],
S.[PAMigrationKey],
S.[RecordSource],
S.[RelationshipType],
S.[ServiceProviderType],
S.[InternalType],
S.[InternalAppointmentStatus],
S.[InternalLicensingJurisdiction],
S.[LastValidated],
S.[SpecialInstruction],
S.[ValidationResetDate],
S.[IsValidationReset],
S.[IsIndividualAcceptingNewPatients],
S.[IsInternalCanCreateHealthCareOrders],
S.[IsDirectMessagingVHIE],
S.[IsHSRM],
S.[IsExternal],
S.[IsRefDoc],
S.[IsOnLeie],
S.[IsLeieValidated],
S.[IsLicenseValidated],
S.[IsProviderContactValidated],
S.[IsAddressValidated],
S.[IsNppesNPIValidated],
S.[IsSAMValidated],
S.[IsGeocoded],
S.[IsPhone],
S.[IsMail],
S.[IsSecuredEmail],
S.[IsPrimaryCarePhysician],
S.[IsIndividualPrimaryCareProviderAcceptingVA],
S.[IsAccountableCareOrganization],
S.[IsSendMarketingMaterials],
S.[IsDoNotAllowPhoneCalls],
S.[IsDoNotAllowFaxes],
S.[IsDoNotAllowEmails],
S.[IsDoNotAllowBulkEmails],
S.[IsDoNotAllowMails],
S.[IsDoNotAllowBulkMails],
S.[IsContactPrefEmail],
S.[IsContactPrefFax],
S.[IsDoNotSendMarketingMaterials],
S.[IsProcessed],
S.[PPMSLastUpdatedDate],
S.[PPMSLastValidatedDate],
S.[PPMSCreated_By],
S.[PPMSCreatedOn_Date],
S.[PPMSModified_By],
S.[PPMSModifiedOn_Date],
S.[InactiveFlag],
S.[InactiveDate],
S.[Created_By],
S.[Created_Date],
S.[Modified_By],
S.[Modified_Date]
)
OUTPUT S.NonVAProvider_stg_Id INTO @T;
DELETE [App].[dev_NonVAProvider_stg_V] WHERE NonVAProvider_stg_Id in (SELECT NonVAProvider_stg_Id FROM @T);
GO
--
--
CREATE PROCEDURE [App].[dev_merge_ProviderAgreement]
AS

DECLARE @T TABLE([ProviderAgreement_stg_Id] INT);

MERGE [App].[dev_ProviderAgreement_V] AS T
USING [App].[dev_ProviderAgreement_stg_V] AS S
ON (T.[AgreementGuid] = S.[AgreementGuid]) AND (T.[AgreementId]	= S.[AgreementId])
WHEN MATCHED THEN UPDATE
SET T.[NonVAProvider_Id_FK]	= S.[NonVAProvider_Id_FK],
T.[ProviderName]	= S.[ProviderName],
T.[ProviderType]	= S.[ProviderType],
T.[AgreementGuid]	= S.[AgreementGuid],
T.[AgreementId]	= S.[AgreementId],
T.[AgreementType]	= S.[AgreementType],
T.[AssignedFacility]	= S.[AssignedFacility],
T.[EffectiveDate]	= S.[EffectiveDate],
T.[ExpiratiOn_Date]	= S.[ExpiratiOn_Date],
T.[MedicalDirectorSignatureDate]	= S.[MedicalDirectorSignatureDate],
T.[QualificationExpirationDate]	= S.[QualificationExpirationDate],
T.[QualificationReviewDate]	= S.[QualificationReviewDate],
T.[SpecialtyCoverage]	= S.[SpecialtyCoverage],
T.[ProviderAgreementStatus]	= S.[ProviderAgreementStatus],
T.[ProviderAgreementStatusReason]	= S.[ProviderAgreementStatusReason],
T.[CalcAgreementExpirationDate]	= S.[CalcAgreementExpirationDate],
T.[CalcExpirationTimeFrameYears]	= S.[CalcExpirationTimeFrameYears],
T.[DocumentLocation]	= S.[DocumentLocation],
T.[ImportStatusField]	= S.[ImportStatusField],
T.[Owner]	= S.[Owner],
T.[OwningBusinessUnit]	= S.[OwningBusinessUnit],
T.[OwningTeam]	= S.[OwningTeam],
T.[OwningUser]	= S.[OwningUser],
T.[PendingDateSet]	= S.[PendingDateSet],
T.[CancelDateSet]	= S.[CancelDateSet],
T.[RequiredAttachment]	= S.[RequiredAttachment],
T.[IsProviderCapacityLackOfAvailability]	= S.[IsProviderCapacityLackOfAvailability],
T.[IsPreviousExperienceWithChoiceViaTW]	= S.[IsPreviousExperienceWithChoiceViaTW],
T.[IsDeclinedPreviousExpWithProvAgreement]	= S.[IsDeclinedPreviousExpWithProvAgreement],
T.[IsDeclinedRefusalToCommitAtLowerLevel]	= S.[IsDeclinedRefusalToCommitAtLowerLevel],
T.[IsDeclinedRefusalToCompleteOtherReqTraining]	= S.[IsDeclinedRefusalToCompleteOtherReqTraining],
T.[IsDeclinedRefusalToCompleteReqOpiodTraining]	= S.[IsDeclinedRefusalToCompleteReqOpiodTraining],
T.[IsDeclinedRefusedCompleteQualificationDocument]	= S.[IsDeclinedRefusedCompleteQualificationDocument],
T.[IsDeclinedPaymentRateOrMethodology]	= S.[IsDeclinedPaymentRateOrMethodology],
T.[IsDeclinedPreviousExperienceWithChoice]	= S.[IsDeclinedPreviousExperienceWithChoice],
T.[IsDeclinedTimelyReimbursements]	= S.[IsDeclinedTimelyReimbursements],
T.[IsStatusSwitch]	= S.[IsStatusSwitch],
T.[StatusSwitchDate]	= S.[StatusSwitchDate],
T.[PPMSCreated_By]	= S.[PPMSCreated_By],
T.[PPMSCreatedOn_Date]	= S.[PPMSCreatedOn_Date],
T.[PPMSModified_By]	= S.[PPMSModified_By],
T.[PPMSModifiedOn_Date]	= S.[PPMSModifiedOn_Date],
T.[InactiveFlag]	= S.[InactiveFlag],
T.[InactiveDate]	= S.[InactiveDate],
T.[Created_By]	= S.[Created_By],
T.[Created_Date]	= S.[Created_Date],
T.[Modified_By]	= S.[Modified_By],
T.[Modified_Date]	= S.[Modified_Date]
WHEN NOT MATCHED BY TARGET THEN
INSERT (NonVAProvider_Id_FK,
ProviderName,
ProviderType,
AgreementGuid,
AgreementId,
AgreementType,
AssignedFacility,
EffectiveDate,
ExpiratiOn_Date,
MedicalDirectorSignatureDate,
QualificationExpirationDate,
QualificationReviewDate,
SpecialtyCoverage,
ProviderAgreementStatus,
ProviderAgreementStatusReason,
CalcAgreementExpirationDate,
CalcExpirationTimeFrameYears,
DocumentLocation,
ImportStatusField,
Owner,
OwningBusinessUnit,
OwningTeam,
OwningUser,
PendingDateSet,
CancelDateSet,
RequiredAttachment,
IsProviderCapacityLackOfAvailability,
IsPreviousExperienceWithChoiceViaTW,
IsDeclinedPreviousExpWithProvAgreement,
IsDeclinedRefusalToCommitAtLowerLevel,
IsDeclinedRefusalToCompleteOtherReqTraining,
IsDeclinedRefusalToCompleteReqOpiodTraining,
IsDeclinedRefusedCompleteQualificationDocument,
IsDeclinedPaymentRateOrMethodology,
IsDeclinedPreviousExperienceWithChoice,
IsDeclinedTimelyReimbursements,
IsStatusSwitch,
StatusSwitchDate,
PPMSCreated_By,
PPMSCreatedOn_Date,
PPMSModified_By,
PPMSModifiedOn_Date,
InactiveFlag,
InactiveDate,
Created_By,
Created_Date,
Modified_By,
Modified_Date ) VALUES (
 S.[NonVAProvider_Id_FK],
 S.[ProviderName],
 S.[ProviderType],
 S.[AgreementGuid],
 S.[AgreementId],
 S.[AgreementType],
 S.[AssignedFacility],
 S.[EffectiveDate],
 S.[ExpiratiOn_Date],
 S.[MedicalDirectorSignatureDate],
 S.[QualificationExpirationDate],
 S.[QualificationReviewDate],
 S.[SpecialtyCoverage],
 S.[ProviderAgreementStatus],
 S.[ProviderAgreementStatusReason],
 S.[CalcAgreementExpirationDate],
 S.[CalcExpirationTimeFrameYears],
 S.[DocumentLocation],
 S.[ImportStatusField],
 S.[Owner],
 S.[OwningBusinessUnit],
 S.[OwningTeam],
 S.[OwningUser],
 S.[PendingDateSet],
 S.[CancelDateSet],
 S.[RequiredAttachment],
 S.[IsProviderCapacityLackOfAvailability],
 S.[IsPreviousExperienceWithChoiceViaTW],
 S.[IsDeclinedPreviousExpWithProvAgreement],
 S.[IsDeclinedRefusalToCommitAtLowerLevel],
 S.[IsDeclinedRefusalToCompleteOtherReqTraining],
 S.[IsDeclinedRefusalToCompleteReqOpiodTraining],
 S.[IsDeclinedRefusedCompleteQualificationDocument],
 S.[IsDeclinedPaymentRateOrMethodology],
 S.[IsDeclinedPreviousExperienceWithChoice],
 S.[IsDeclinedTimelyReimbursements],
 S.[IsStatusSwitch],
 S.[StatusSwitchDate],
 S.[PPMSCreated_By],
 S.[PPMSCreatedOn_Date],
 S.[PPMSModified_By],
 S.[PPMSModifiedOn_Date],
 S.[InactiveFlag],
 S.[InactiveDate],
 S.[Created_By],
 S.[Created_Date],
 S.[Modified_By],
 S.[Modified_Date] )
 OUTPUT S.ProviderAgreement_stg_Id INTO @T;
DELETE [App].[dev_ProviderAgreement_stg_V] WHERE ProviderAgreement_stg_Id in (SELECT ProviderAgreement_stg_Id FROM @T);
GO
--
--
CREATE PROCEDURE [App].[dev_merge_ProviderService]
AS

DECLARE @T TABLE([ProviderServiceCareSite_stg_Id] INT);

MERGE [App].[dev_ProviderServiceCareSite_V] AS T
USING [App].[dev_ProviderServiceCareSite_stg_V] AS S
ON (T.[CareSite_Id_FK] = S.[CareSite_Id_FK]) AND (T.[NonVAProvider_Id_FK] = S.[NonVAProvider_Id_FK]) AND
	T.[SpecialityCode] = S.[SpecialityCode] AND T.[SpecialtyName] = S.[SpecialtyName]
WHEN MATCHED THEN UPDATE
SET T.[NonVAProvider_Id_FK] = S.[NonVAProvider_Id_FK],
T.[CareSite_Id_FK] = S.[CareSite_Id_FK],
T.[SpecialityCode] = S.[SpecialityCode],
T.[IsPrimaryTaxonomy] = S.[IsPrimaryTaxonomy],
T.[ProviderServiceStatus] = S.[ProviderServiceStatus],
T.[ProviderServiceStatusReason] = S.[ProviderServiceStatusReason],
T.[WorkHours] = S.[WorkHours],
T.[SpecialtyName] = S.[SpecialtyName],
T.[ProviderNetwork] = S.[ProviderNetwork],
T.[ProviderAgreement] = S.[ProviderAgreement],
T.[DescriptionOfService] = S.[DescriptionOfService],
T.[VAProviderRelationship] = S.[VAProviderRelationship],
T.[QualityRankingTotalScore] = S.[QualityRankingTotalScore],
T.[IsPrimaryCare] = S.[IsPrimaryCare],
T.[IsProviderAcceptingVA] = S.[IsProviderAcceptingVA],
T.[IsProviderAcceptingNewPatients]  = S.[IsProviderAcceptingNewPatients],
T.[PPMSCreated_By] = S.[PPMSCreated_By],
T.[PPMSCreatedOn_Date] = S.[PPMSCreatedOn_Date],
T.[PPMSModified_By] = S.[PPMSModified_By],
T.[PPMSModifiedOn_Date] = S.[PPMSModifiedOn_Date],
T.[IsProcessed] = S.[IsProcessed],
T.[InactiveFlag] = S.[InactiveFlag],
T.[InactiveDate] = S.[InactiveDate],
T.[Created_By] = S.[Created_By],
T.[Created_Date] = S.[Created_Date],
T.[Modified_By] = S.[Modified_By],
T.[Modified_Date] = S.[Modified_Date]
WHEN NOT MATCHED BY TARGET THEN
INSERT (NonVAProvider_Id_FK,
CareSite_Id_FK,
SpecialityCode,
IsPrimaryTaxonomy,
ProviderServiceStatus,
ProviderServiceStatusReason,
WorkHours,
SpecialtyName,
ProviderNetwork,
ProviderAgreement,
DescriptionOfService,
VAProviderRelationship,
QualityRankingTotalScore,
IsPrimaryCare,
IsProviderAcceptingVA,
IsProviderAcceptingNewPatients,
PPMSCreated_By,
PPMSCreatedOn_Date,
PPMSModified_By,
PPMSModifiedOn_Date,
IsProcessed,
InactiveFlag,
InactiveDate,
Created_By,
Created_Date,
Modified_By,
Modified_Date) VALUES (
S.[NonVAProvider_Id_FK],
S.[CareSite_Id_FK],
S.[SpecialityCode],
S.[IsPrimaryTaxonomy],
S.[ProviderServiceStatus],
S.[ProviderServiceStatusReason],
S.[WorkHours],
S.[SpecialtyName],
S.[ProviderNetwork],
S.[ProviderAgreement],
S.[DescriptionOfService],
S.[VAProviderRelationship],
S.[QualityRankingTotalScore],
S.[IsPrimaryCare],
S.[IsProviderAcceptingVA],
S.[IsProviderAcceptingNewPatients],
S.[PPMSCreated_By],
S.[PPMSCreatedOn_Date],
S.[PPMSModified_By],
S.[PPMSModifiedOn_Date],
S.[IsProcessed],
S.[InactiveFlag],
S.[InactiveDate],
S.[Created_By],
S.[Created_Date],
S.[Modified_By],
S.[Modified_Date])
OUTPUT S.ProviderServiceCareSite_stg_Id INTO @T;
DELETE [App].[dev_ProviderServiceCareSite_stg_V] WHERE ProviderServiceCareSite_stg_Id in (SELECT ProviderServiceCareSite_stg_Id FROM @T);
GO


