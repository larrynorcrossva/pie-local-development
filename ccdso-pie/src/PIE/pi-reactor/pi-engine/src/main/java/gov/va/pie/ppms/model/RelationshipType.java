//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.14 at 03:53:36 PM EDT 
//


package gov.va.pie.ppms.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RelationshipType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="RelationshipType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Choice"/&gt;
 *     &lt;enumeration value="PC3"/&gt;
 *     &lt;enumeration value="Individual Authorization"/&gt;
 *     &lt;enumeration value="Local Contract"/&gt;
 *     &lt;enumeration value="Provider Agreement"/&gt;
 *     &lt;enumeration value="VA Provider"/&gt;
 *     &lt;enumeration value="CCN"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "RelationshipType")
@XmlEnum
public enum RelationshipType {

    @XmlEnumValue("Choice")
    CHOICE("Choice"),
    @XmlEnumValue("PC3")
    PC_3("PC3"),
    @XmlEnumValue("Individual Authorization")
    INDIVIDUAL_AUTHORIZATION("Individual Authorization"),
    @XmlEnumValue("Local Contract")
    LOCAL_CONTRACT("Local Contract"),
    @XmlEnumValue("Provider Agreement")
    PROVIDER_AGREEMENT("Provider Agreement"),
    @XmlEnumValue("VA Provider")
    VA_PROVIDER("VA Provider"),
    CCN("CCN");
    private final String value;

    RelationshipType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RelationshipType fromValue(String v) {
        for (RelationshipType c: RelationshipType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
