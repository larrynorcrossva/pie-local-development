//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.14 at 03:53:36 PM EDT 
//


package gov.va.pie.ppms.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IdentifierTypeCodeList.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IdentifierTypeCodeList"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Other"/&gt;
 *     &lt;enumeration value="Employer Identification Number"/&gt;
 *     &lt;enumeration value="Medicaid"/&gt;
 *     &lt;enumeration value="Medicare Number"/&gt;
 *     &lt;enumeration value="Staff SID"/&gt;
 *     &lt;enumeration value="Staff IEN"/&gt;
 *     &lt;enumeration value="PAID IEN"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "IdentifierTypeCodeList")
@XmlEnum
public enum IdentifierTypeCodeList {

    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("Employer Identification Number")
    EMPLOYER_IDENTIFICATION_NUMBER("Employer Identification Number"),
    @XmlEnumValue("Medicaid")
    MEDICAID("Medicaid"),
    @XmlEnumValue("Medicare Number")
    MEDICARE_NUMBER("Medicare Number"),
    @XmlEnumValue("Staff SID")
    STAFF_SID("Staff SID"),
    @XmlEnumValue("Staff IEN")
    STAFF_IEN("Staff IEN"),
    @XmlEnumValue("PAID IEN")
    PAID_IEN("PAID IEN");
    private final String value;

    IdentifierTypeCodeList(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IdentifierTypeCodeList fromValue(String v) {
        for (IdentifierTypeCodeList c: IdentifierTypeCodeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
